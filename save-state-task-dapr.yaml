apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: save-state-task-dapr
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Maven build.

  workspaces:
    - name: source
      description: The workspace consisting of Maven project.
    # - name: dapr-data
    #   description: >-
    #     The workspace for Dapr state data.
  params:
    - name: PIPELINE_NAME
      type: string
      description: The pipeline name.
      default: "build-with-"
    - name: EXECUTION_NAME
      type: string
      description: The execution name.
      default: "build-with-qcxw!"
    - name: DAPR_APP_ID
      type: string
      description: The Dapr app ID for saving state
      default: "test-sidecar" # This id comes from te annotation in the pipelinerun
    - name: STATE_KEY
      type: string
      description: The key under which to save the state
      default: "nombre_componente|nombre_pipeline|ejecucion|nombre_step" # This is what is going to be save under a key in cosmosdb
    - name: STATE_JSON
      type: string
      description: The JSON data to save in the state
      default: >-
        {
          "pipelineName": "$(params.PIPELINE_NAME)",
          "status": "running",
          "executioName": "$(params.EXECUTION_NAME)",
          "stepName": "$(params.STEP_NAME)",
          "start_time": "2023-09-28T10:00:00Z",
          "end_time": null
        }
  steps:
    - name: save-state
      image: curlimages/curl:latest
      script: |
        formatted_date=$(date "+%Y-%m-%d %H:%M:%S")
        curl -X POST -H "Content-Type: application/json" -d '[
          {
            "key": "$(params.STATE_KEY)",
            "value": {
              "pipelineName": "$(params.PIPELINE_NAME)",
              "status": "running",
              "executioName": "$(params.EXECUTION_NAME)",
              "stepName": "core-info",
              "start_time": "'"$formatted_date"'",
              "end_time": null
            }
          }
        ]' http://localhost:3500/v1.0/state/cosmosdbcomponent

    - name: check-state
      image: curlimages/curl:latest # Use a Docker image with curl installed
      command:
        - curl
        - http://localhost:3500/v1.0/state/cosmosdbcomponent/$(params.STATE_KEY)

    # - name: save-state
    #   image: curlimages/curl:latest
    #   command: ["tail", "-f", "/dev/null"]